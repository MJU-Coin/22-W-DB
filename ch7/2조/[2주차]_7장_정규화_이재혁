## 이상현상

- 이상현상의 개념
    - 데이터베이스 설계가 잘못되면 발생하는 문제
    - 발생하는 문제들
        - 삭제이상: 투플 삭제 시 같이 저장된 다른 정보까지 연쇄적으로 삭제되는 현상
        - 삽입이상: 투플 삽입 시 특정 속성에 해당하는 값이 없어 NULL 값을 입력해야 하는 현상
        - 수정이상: 투플 수정 시 중복된 데이터의 일부만 수정되어 데이터의 불일치 문제가 일어나는 현상
- 이상현상의 예
    - 잘못 설계된 계절학기 수강 테이블
        
        
        | sid | class | price |
        | --- | --- | --- |
        | 100 | fortran | 20000 |
        | 150 | pascal | 15000 |
        | 200 | c | 10000 |
        | 250 | fortran | 20000 |
        - 삭제 이상: 200 sid 삭제 시 c 수업 정보도 함께 삭제되는 문제
        - 삽입 이상: 새 강좌가 개설 시 신청한 학생이 없으면 NULL이 삽입
        - 수정 이상: fortran 수업 가격 수정시 fortran 가격이 두 개가 될 수 있다
    - 수정된 계절학기 수강 테이블
    
    SummerPrice(class, price)
    
    | class | price |
    | --- | --- |
    | fortran | 20000 |
    | pascal | 15000 |
    | c | 10000 |
    
    SummerEnroll(sid, class)
    
    | sid | class |
    | --- | --- |
    | 100 | fortran |
    | 150 | pascal |
    | 200 | c |
    | 250 | fortran |
    
     
    
    - 이상 발생 X

## 함수 종속성

- 함수 종속성 개념
    - 이상현상이 발생하는 테이블을 수정하여 정상으로 만드는 과정을 정규화(normalization)라고 한다
- 함수 종속성 다이어그램
    - 함수 종속성 다이어그램은 릴레이션의 속성을 직사각형, 속성 간의 함수 종속성을 화살표로 나타낸다. 복합 속성의 경우 직사각형으로 묶어서 그린다.
- 규칙
    - 부분 집합
    - 증가
    - 이행
    - 결합 규칙
    - 분해
    - 유사이행
- 함수 종속성과 기본키
    - 릴레이션의 함수 종속성을 파악하기 위해서는 우선 ‘기본키’를 찾아야 한다. 기본키가 함수 종속성에서 어떤 역할을 하는지 알면 이상현상을 제거하는 정규화 과정을 쉽게 이해할 수 있다
    

## 정규화

- 정규화 과정
    - 이상현상이 있는 릴레이션은 이상현상을 일으키는 함수 종속성의 유형에 따라 등급을 구분할 수 있다
    - 정규형이 높을수록 이상현상은 줄어든다
    - 제 1 정규형
        - 릴레이션 R의 모든 속성 값이 원자값을 가지면 제 1정규형이라고 한다
            - 원자값이란 더 이상 쪼개질 수 없는 단위를 말한다
        - 제1 정규형에서는 어떠한 이상현상이 발생할까?
            - **삽입 이상** : 학생이 새 과목을 수강 신청할 때 반드시 학생의 학과와 지도교수를 알아야 한다. (불필요한 정보)
            - **삭제 이상** : 300번 학생이 C400 과목을 취소하면, 해당 과목에 대한 정보가 모두 사라진다.
            - **** **갱신 이상** : 100번 학생이 지도교수를 변경할 때, P1인 행을 모두 찾아서 변경해주어야 한다.
        
        제1 정규형에서 이러한 이상현상이 발생하는 이유는, **기본키(primary key)가 아닌 속성들이 기본키에 완전 함수 종속되지 못하고 부분 함수 종속되어 있기 때문이다.** 즉, 기본키의 일부 속성에만 의존하고 있기 때문이다. 
        
    - 제 2 정규형
        - 제 1 정규형이면서, 기본키에 속하지 않은 속성 모두가 기본키에 완전 함수 종속인 정규형
        
        제2 정규형에도 여전히 이상현상이 존재한다.
        
        - **삽입 이상** : 지도교수가 학과에 소속되어 있음을 추가할 때 반드시 지도 학생이 있어야 한다. (불필요한 정보 필요)
        - **삭제 이상** : 300번 학생이 자퇴하는 경우 P3 교수의 학과 정보가 사라진다.
        - **갱신 이상** : 지도교수의 학과가 변경되는 경우 모두 찾아서 변경시켜주어야 한다. (지도교수가 동일한 학생이 여러 명 있는 경우)
        
        제2 정규형에서 이상현상이 여전히 발생하는 이유는 '**이행적 함수 종속성**' 때문이다. **이행적 함수 종속성은 속성이 A→B이고, B→C이면서 A→C의 관계에 있는 것**을 말한다.
        
    - 제 3 정규형
        - 제 2 정규형이면서, 이행적 함수 종속성을 제거한 정규형
        - 즉, 기본키에 속하지 않은 모든 속성이 기본키에 이행적 함수 종속이 아닐 때
         제3 정규형이라고 한다. 다르게 표현하면, 기본키 이외의 속성이 그 외 다른 속성을 결정할 수 없는 것이다.
        - 이상현상은 릴레이션의 기본키가 아닌 강좌이름이 수강료를 결정하는 종속관계에서 발생한다
    - BCNF
        - **제3 정규형을 조금 더 강화시킨 개념.** 강한 제3 정규형이라고도 한다.
        - 결정자(Determinant)가 후보키(Alternative Key)로 취급되고 있지 않기 때문에 이상현상 발생
        - 모든 결정자는 항상 후보키가 되도록 릴레이션을 분해해주면 BCNF 만족
    - 무손실 분해
        - 하나의 릴레이션을 분해하고 다시 조인연산을 했을 때 데이터 손실이 없는 것을 뜻
        한다